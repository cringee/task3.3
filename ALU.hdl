CHIP ALU {
    IN x[16], y[16], zx, nx, zy, ny, f, no;
    OUT out[16], zr, ng;

    PARTS:
	
	// zx
	Mux16(a=x,sel=zx,out=outzx);
	// nx
	Not16(in=outzx,out=notzx);
	Mux16(a=outzx,b=notzx,sel=nx,out=outnx);
	
	// zy
	Mux16(a=y,sel=zy,out=outzy);
	// ny
	Not16(in=outzy,out=notzy);
	Mux16(a=outzy,b=notzy,sel=ny,out=outny);
	
	// f
	Add16(a=outnx,b=outny,out=xplusy);
	And16(a=outnx,b=outny,out=xandy);
	Mux16(a=xandy,b=xplusy,sel=f,out=outf);
	
	// no
	Not16(in=outf,out=notoutf);
	Mux16(a=outf,b=notoutf,sel=no,out=out,out[15]=outng,out[8..15]=result1,out[0..7]=result2);
	
	// ng
	And(a=outng,b=true,out=ng);
	
	// zr
	Or8Way(in=result1,out=zr1);
	Or8Way(in=result2,out=zr2);
	Or(a=zr1,b=zr2,out=outzr);
	Not(in=outzr,out=zr);
}